{"version":3,"sources":["Components/FilterString/FilterString.module.css","Components/FilterString/FilterString.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FilterString","React","memo","useState","data","setData","filterData","setFilterData","inputData","setInputData","checkboxValue","setCheckboxValue","textInput","useEffect","axios","then","catch","error","console","className","style","container","h1","containerValue","inpChe","id","type","input","placeholder","onChange","event","inputValue","target","value","sortData","button","onClick","length","isNaN","result","filter","word","regExpUpperCase","RegExp","resultUpperCase","item","test","alert","regExp","searchResult","listData","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,UAAY,gCAAgC,eAAiB,qCAAqC,GAAK,yBAAyB,OAAS,6BAA6B,MAAQ,4BAA4B,SAAW,+BAA+B,OAAS,6BAA6B,MAAQ,8B,0HCkIrSC,EA9HMC,IAAMC,MAAK,WAC5B,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA0CN,mBAAS,KAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KAEIC,EAAYJ,EAAY,kFAAmB,GA6D/C,OAXAK,qBAAU,WACNC,MAAA,8CAjDQ,mCAiDgDC,MAAK,SAAAX,GACzDC,EAAQD,EAAKA,KAAKA,SAEjBY,OAAM,SAAAC,GACHC,QAAQD,MAAM,SAAUA,QAEjC,CACCT,EAAWE,IAIX,gCACI,sBAAKS,UAAWC,IAAMC,UAAtB,UACI,oBAAIF,UAAWC,IAAME,GAArB,yGACA,sBAAKH,UAAWC,IAAMG,eAAtB,UACI,sBAAKJ,UAAWC,IAAMI,OAAtB,UACI,+FACA,kCACI,uBAAOC,GAAG,YAAYC,KAAK,OAAOP,UAAWC,IAAMO,MAC5CC,YAAY,8HACZC,SAnER,SAACC,GACpB,IAAMC,EAAaD,EAAME,OAAOC,MAEhCxB,EAAasB,GACWtB,EAAasB,IA+DgBE,MAAOzB,IAExC,+BAAOI,IACP,gCACI,uBAAOc,KAAK,WACLG,SA/BZ,WACKlB,EAAN,MAAlBD,EAAyC,GAAuB,KACzCD,EAAaD,MA+BZ,8LAKZ,sBAAKW,UAAWC,IAAMc,SAAtB,UACI,8BACI,sIAEJ,gCACI,wBACIf,UAAWC,IAAMe,OACjBC,QA/EH,WAErB,GAAI5B,EAAU6B,QAAU,KAAOC,MAAM9B,GAAY,CAC7C,IAAM+B,EAASnC,EAAKoC,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,OAAS7B,KAEjD,GAAsB,KAAlBE,EAAsB,CACtB,IAAMgC,EAAkB,IAAIC,OAAO,eAC7BC,EAAkBL,EAAOC,QAAO,SAAAK,GAAI,OAAIH,EAAgBI,KAAKD,MAEnEtC,EAAcqC,OAEY,MAAlBlC,GACRH,EAAcgC,QAGb/B,EAAU6B,UAAWC,MAAM9B,IAC5BuC,MAAM,8EA6DM,kFAKA,wBAAQ5B,UAAWC,IAAMe,OACjBC,QA9DR,WACpB,GAAI5B,EAAU6B,QAAU,GAAKC,MAAM9B,GAAY,CAC3C,IAAMwC,EAAS,IAAIL,OAAOnC,EAAX,UAAyBE,IAClCuC,EAAe7C,EAAKoC,QAAO,SAAAC,GAAI,OAAIO,EAAOF,KAAKL,MAErDlC,EAAc0C,QAETX,MAAM9B,IACPuC,MAAM,8EAqDM,6FASfzC,EAAW+B,OAAS,GACrB,gCACI,yFAEA,qBAAKlB,UAAWC,IAAM8B,SAAtB,SACI,6BACK5C,EAAW6C,KAAI,SAACN,GAAD,OACZ,oBAAe1B,UAAU,YAAzB,SAAsC0B,GAA7BA,mBC7GtBO,MARf,WACE,OACE,qBAAKjC,UAAU,MAAf,SACJ,cAAC,EAAD,OCMekC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.c777cce6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterString_container__2N_O_\",\"containerValue\":\"FilterString_containerValue__2fM0J\",\"h1\":\"FilterString_h1__33R9j\",\"inpChe\":\"FilterString_inpChe__vBUtl\",\"input\":\"FilterString_input__2bFrN\",\"sortData\":\"FilterString_sortData__U0Krz\",\"button\":\"FilterString_button__pFmbN\",\"blink\":\"FilterString_blink__2YFmx\"};","import React from \"react\";\r\nimport style from \"./FilterString.module.css\";\r\nimport {useEffect, useState} from \"react\";\r\nimport * as axios from \"axios\";\r\n\r\nconst FilterString = React.memo(() => {\r\n    const [data, setData] = useState([]);\r\n    const [filterData, setFilterData] = useState([]);\r\n    const [inputData, setInputData] = useState('');\r\n    const [checkboxValue, setCheckboxValue] = useState('i');\r\n\r\n    let textInput = inputData ? 'Данные введены' : '';\r\n\r\n    const url = 'http://www.mrsoft.by/data.json';\r\n\r\n    const inputDataValue = (event) => {\r\n        const inputValue = event.target.value;\r\n\r\n        setInputData(inputValue);\r\n        checkboxValue === 'i' ? setInputData(inputValue) : setInputData(inputValue);\r\n    };\r\n\r\n    const buttonWordLength = () => {\r\n\r\n        if (inputData.length >= 1 && !+isNaN(inputData)) {\r\n            const result = data.filter(word => word.length > inputData);\r\n\r\n            if (checkboxValue === '') {\r\n                const regExpUpperCase = new RegExp(/([A-Z])\\w+/g);\r\n                const resultUpperCase = result.filter(item => regExpUpperCase.test(item));\r\n\r\n                setFilterData(resultUpperCase);\r\n\r\n            } else if ((checkboxValue === 'i')) {\r\n                setFilterData(result);\r\n            }\r\n        } else {\r\n            if (!inputData.length || +isNaN(inputData)) {\r\n                alert('Введите число');\r\n            }\r\n        }\r\n    };\r\n\r\n    const ButtonSubstring = () => {\r\n        if (inputData.length >= 1 && isNaN(inputData)) {\r\n            const regExp = new RegExp(inputData, `${checkboxValue}`);\r\n            const searchResult = data.filter(word => regExp.test(word));\r\n\r\n            setFilterData(searchResult);\r\n        } else {\r\n            if (!isNaN(inputData)) {\r\n                alert('Введите буквы');\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleCheckbox = () => {\r\n        checkboxValue === 'i' ? setCheckboxValue('') : setCheckboxValue('i');\r\n        checkboxValue === '' ? setInputData(inputData) : setInputData(inputData);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://cors-anywhere.herokuapp.com/${url}`).then(data => {\r\n            setData(data.data.data);\r\n        })\r\n            .catch(error => {\r\n                console.error(\"Error:\", error);\r\n            });\r\n    }, [\r\n        inputData, checkboxValue\r\n    ]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.container}>\r\n                <h1 className={style.h1}>Тестовое задание</h1>\r\n                <div className={style.containerValue}>\r\n                    <div className={style.inpChe}>\r\n                        <h4>Ввод данных</h4>\r\n                        <label>\r\n                            <input id=\"text-data\" type=\"text\" className={style.input}\r\n                                   placeholder=\"Введите слово или число\"\r\n                                   onChange={inputDataValue} value={inputData}\r\n                            />\r\n                            <span>{textInput}</span>\r\n                            <div>\r\n                                <input type=\"checkbox\"\r\n                                       onChange={toggleCheckbox}\r\n                                />\r\n                                <span>чувствительность регистра</span>\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className={style.sortData}>\r\n                        <div>\r\n                            <div>Сортировка данных</div>\r\n                        </div>\r\n                        <div>\r\n                            <button\r\n                                className={style.button}\r\n                                onClick={buttonWordLength}\r\n                            >По длине слов\r\n                            </button>\r\n                            <button className={style.button}\r\n                                    onClick={ButtonSubstring}\r\n                            >По подстроке\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {filterData.length > 0 &&\r\n            <div>\r\n                <h4>Результат:</h4>\r\n\r\n                <div className={style.listData}>\r\n                    <ol>\r\n                        {filterData.map((item) =>\r\n                            <li key={item} className=\"flow-text\">{item}</li>\r\n                        )\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default FilterString;","import './App.css';\nimport FilterString from \"./Components/FilterString/FilterString\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n<FilterString />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}